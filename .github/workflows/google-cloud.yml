name: Configure Google Cloud

on:
  push:
    branches:
      - main

  pull_request:
    types: [ labeled, opened, reopened, synchronize ]
    branches:
      - '*'

  workflow_dispatch:
    inputs:
      debug:
        description: 'Debug'
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  DRY_RUN: ${{ contains(github.event.pull_request.labels.*.name, 'Dry Run') }}
  DEBUG: ${{ inputs.debug }}

jobs:
  build:
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'Google Cloud'))
      || (github.event.action == 'labeled' && github.event.label.name == 'Google Cloud')
      || github.event_name == 'workflow_dispatch'

    permissions:
      pull-requests: 'write'
      id-token: write

    steps:
      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Generate Token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          private_key: ${{ secrets.PRIVATE_KEY }}
          app_id: ${{ secrets.APP_ID }}

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Google Cloud Auth
        id: google_cloud_auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ID }}
          token_format: access_token

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Docker Auth
        uses: docker/login-action@v2
        with:
          username: oauth2accesstoken
          password: ${{ steps.google_cloud_auth.outputs.access_token }}
          registry: europe-west1-docker.pkg.dev

      - name: Setup Gradle Build
        uses: gradle/gradle-build-action@v2

      - name: Containerize Cloud Run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_PROJECT_API_KEY: ${{ secrets.google_project_api_key }}
          GOOGLE_SERVICE_ACCOUNT_ID: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ID }}
          MOBILE_SDK_APP_ID: ${{ secrets.mobile_sdk_app_id }}
          PLAYGROUND_API_KEY: ${{ secrets.PLAYGROUND_API_KEY }}
        if: github.ref == 'refs/heads/main'
        run: |
          ./gradlew cloud-run:jib \
            --image=europe-west1-docker.pkg.dev/${{ steps.google_cloud_auth.outputs.project_id }}/cloud-run-source-deploy/playground.ashdavies.dev \
            $([ DEBUG == true ] && echo '--debug' || echo '--info') \
            $([ DRY_RUN == true ] && echo '--dry-run') \
            --no-configuration-cache \
            --console=plain \

      - name: Generate Terraform Plan
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
          PLAYGROUND_API_KEY: ${{ secrets.PLAYGROUND_API_KEY }}
          TF_LOG: ${{ env.DEBUG && 'DEBUG' || 'ERROR' }}
        run: |
          ./gradlew terraformPlan \
            $([ DEBUG == true ] && echo '--debug' || echo '--info') \
            $([ DRY_RUN == true ] && echo '--dry-run') \
            --no-configuration-cache \
            --console=plain

      - name: Upload Terraform Plan
        uses: actions/upload-artifact@v3
        with:
          name: terraform-plan
          path: "**/build/terraform/main/plan.bin"
          if-no-files-found: error

      - name: Apply Terraform Plan
        if: github.ref == 'refs/heads/main'
        run: |
          ./gradlew google-cloud:terraformApply \
            $([ DEBUG == true ] && echo '--debug' || echo '--info') \
            $([ DRY_RUN == true ] && echo '--dry-run') \
            --no-configuration-cache \
            --console=plain \
            -Ptf.apply \
