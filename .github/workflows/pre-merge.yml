name: Pre Merge Checks

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - '*'

  workflow_dispatch:
    inputs:
      debug:
        description: 'Debug'
        required: false
        default: false
        type: boolean

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      pull-requests: 'write'
      id-token: 'write'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Delete Bot Comments
        uses: actions/github-script@v6
        if: ${{ github.event_name == 'pull_request' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comments = require('./.github/workflows/scripts/comments.js');
            await comments.deleteAll(context, github)

      - name: Setup JDK
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 17

      - name: Google Cloud Auth
        id: google_cloud_auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ secrets.GOOGLE_WORKLOAD_IDENTITY }}
          service_account: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ID }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Generate Encryption Passphrase
        run: openssl rand -base64 32
        if: ${{ false }}

      - name: Encrypt Google Services config file
        if: ${{ false }}
        run: find . -type f -name "google-services.json" -exec sh -c 'openssl aes-256-cbc -md sha256 -salt -in "$0" -out "${0%.json*}.aes" -k "${GOOGLE_SERVICES_PASSPHRASE}"' {} \;

      - name: Decrypt Google Services
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'Dry Run') }}
        env:
          GOOGLE_SERVICES_PASSPHRASE: ${{ secrets.google_services_passphrase }}
        run: find . -type f -name "google-services.aes" -exec sh -c 'openssl aes-256-cbc -md sha256 -d -in "$0" -out "${0%.aes*}.json" -k "${GOOGLE_SERVICES_PASSPHRASE}"' {} \;

      - name: Run Gradle Tasks
        id: gradle
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GOOGLE_PROJECT_API_KEY: ${{ secrets.google_project_api_key }}
          GOOGLE_SERVICE_ACCOUNT_ID: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_ID }}
          MOBILE_SDK_APP_ID: ${{ secrets.mobile_sdk_app_id }}
          PLAYGROUND_API_KEY: ${{ secrets.PLAYGROUND_API_KEY }}
        with:
          gradle-home-cache-cleanup: true
          arguments: >
            build
              ${{ contains(github.event.pull_request.labels.*.name, 'Dry Run') && '--dry-run' || '' }}
              --configuration-cache
              --console=plain
              --stacktrace
              --info
            
      - name: Gradle Scan Link
        uses: actions/github-script@v6
        if: ${{ github.event_name == 'pull_request' && steps.gradle.outputs.build-scan-url }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comments = require('./.github/workflows/scripts/comments.js');
            const url = `${{ steps.gradle.outputs.build-scan-url }}`;
            const message = `Build scan published to ${url}`;
            await comments.create(context, github, message);

      - name: Produce Test Summary
        uses: test-summary/action@v2
        with:
          paths: "**/build/test-results/test/TEST-*.xml"
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'Dry Run') }}

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: "**/build/reports/tests"
          if-no-files-found: error
        if: ${{ !contains(github.event.pull_request.labels.*.name, 'Dry Run') }}
