swagger: "2.0"
info:
  title: "Playground Service"
  description: "Playground Service definition hosted by Cloud Endpoints with a Cloud Run backend"
  version: "1.0.0"
host: "${cloud_run_hostname}"
schemes:
  - "https"
consumes:
  - "application/json"
produces:
  - "application/json"
paths:
  /hello:
    get:
      tags: [ "hello" ]
      description: "Greet the user"
      operationId: "hello"
      responses:
        "200":
          description: "OK"
  /createToken:
    post:
      tags: [ "token" ]
      description: Create token
      operationId: createToken
      parameters:
        - name: "body"
          in: "body"
          description: "The app ID to use as the JWT app_id"
          required: true
          schema:
            $ref: "#/definitions/FirebaseApp"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#definitions/AppCheckToken"
  /verifyToken:
    put:
      tags: [ "token" ]
      description: "Verify token"
      operationId: "verifyToken"
      parameters:
        - name: "X-Firebase-AppCheck"
          in: "header"
          description: "The App Check token to verify"
          required: true
          type: "string"
      responses:
        "200":
          description: "OK"
          schema:
            $ref: "#definitions/DecodedToken"
        "400":
          description: "Request is missing app check token header"
definitions:
  AppCheckToken:
    type: "object"
    required:
      - "ttlMillis"
      - "token"
    properties:
      ttlMillis:
        type: "integer"
        format: "int64"
        description: "The time-to-live duration of the token in milliseconds"
      token:
        type: "string"
        description: "The Firebase App Check token"
  DecodedToken:
    type: "object"
    required:
      - "audience"
      - "expiresAt"
      - "issuedAt"
      - "subject"
      - "issuer"
      - "appId"
    properties:
      audience:
        type: "array"
        description: "The audience for which this token is intended. This value is a JSON array of two strings, the first is the project number of your Firebase project, and the second is the project ID of the same project."
        items:
          type: "string"
      expiresAt:
        type: "integer"
        format: "int64"
        description: "The App Check token's expiration time, in seconds since the Unix epoch. That is, the time at which this App Check token expires and should no longer be considered valid."
        example: "1672497116"
      issuedAt:
        type: "integer"
        format: "int64"
        description: "The App Check token's issued-at time, in seconds since the Unix epoch. That is, the time at which this App Check token was issued and should start to be considered valid."
        example: "1672493516"
      subject:
        type: "string"
        description: "The Firebase App ID corresponding to the app the token belonged to. As a convenience, this value is copied over to the | app_id property."
        example: "1:1234567890:android:321abc456def7890"
      issuer:
        type: "string"
        description: "The issuer identifier for the issuer of the response. This value is a URL with the format https://firebaseappcheck.googleapis.com/<PROJECT_NUMBER>, where <PROJECT_NUMBER> is the same project number specified in the | aud property."
        example: "https://firebaseappcheck.googleapis.com/1234567890"
      appId:
        type: "string"
        description: "The App ID corresponding to the App the App Check token belonged to. This value is not actually one of the JWT token claims. It is added as a convenience, and is set as the value of the | sub property."
        example: "1:1234567890:android:321abc456def7890"
  FirebaseApp:
    type: "object"
    required:
      - "appId"
    properties:
      appId:
        type: "string"
        description: "The app ID to use as the JWT app_id"
        example: "1:1234567890:android:321abc456def7890"
securityDefinitions:
  ApiKeyAuth:
    name: "X-API-Key"
    type: "apiKey"
    in: "header"
security:
  - ApiKeyAuth: [ ]
x-google-backend:
  address: "${backend_service_name}"
  protocol: "h2"
